local oilbrokermainmenuisopen = falselocal function menupainter()	if(oilbrokermainmenuisopen==true) then		--draw.RoundedBox( 6, 100, 100, 100, 38, Color( 0, 127, 255, 75))		oilbrokermainmenupanel:SetVisible(true)	endendhook.Add("HUDPaint", "navalwarfare_menupaint", menupainter)local function getAllBarrels( data )	local barrels = {}	local loops = 0	while loops < 1000 do 		local thisBarrelIndex = data:ReadShort()		if thisBarrelIndex == -1 then			return barrels		else			local thisBarrel = Entity(thisBarrelIndex)			thisBarrel.Oil = data:ReadFloat()			barrels[#barrels + 1] = thisBarrel		end		loops = loops + 1	end	return nilendlocal function getTotalOil( tbl )	local ret = 0	for k,v in pairs(tbl) do		ret = ret + v.Oil	end	return retendlocal function oilbrokermainmenu( data )	--oilbrokermainmenuisopen = !oilbrokermainmenuisopen	local PosX = ScrW()/2	local PosY = ScrH()/2	local barrels = getAllBarrels( data )	local validation = data:ReadString()	local oilbrokermainmenupanel = vgui.Create("DFrame")	local totalOil = 0	if barrels != nil then		totalOil = getTotalOil(barrels)	end	oilbrokermainmenupanel:SetTitle("OIL BROKER")	oilbrokermainmenupanel:SetPos(PosX-100, PosY-100)	oilbrokermainmenupanel:SetSize(300,260)	oilbrokermainmenupanel:SetVisible(true)	oilbrokermainmenupanel:MakePopup()	oilbrokermainmenupanel:PostMessage("SetTitle", "text", "OIL BROKER")		local oilbrokermainmenupanellist = vgui.Create("DListView")	oilbrokermainmenupanellist:SetParent(oilbrokermainmenupanel)	oilbrokermainmenupanellist:SetPos(0, 21)	oilbrokermainmenupanellist:SetSize(300, 150)	oilbrokermainmenupanellist:SetMultiSelect(false)	oilbrokermainmenupanellist:AddColumn("Name")	oilbrokermainmenupanellist:AddColumn("Oil")	for k,v in pairs(barrels) do		oilbrokermainmenupanellist:AddLine(v:GetClass().."["..v:EntIndex().."]", v.Oil)	end		local oilbrokermainmenupanelslider = vgui.Create( "DNumSlider", oilbrokermainmenupanel)	oilbrokermainmenupanelslider:SetPos(25,20+150)	oilbrokermainmenupanelslider:SetWide(150)	oilbrokermainmenupanelslider:SetValue(totalOil)	oilbrokermainmenupanelslider:SetText("Amount")	oilbrokermainmenupanelslider:SetMin(0)	oilbrokermainmenupanelslider:SetMax(totalOil)	oilbrokermainmenupanelslider:SetDecimals(0)	local oilbrokermainmenupanelsellbutton = vgui.Create("DButton", oilbrokermainmenupanel)	function oilbrokermainmenupanelslider:OnValueChanged( panel, value) 		oilbrokermainmenupanelsellbutton:SetText("Sell "..math.Round(oilbrokermainmenupanelslider:GetValue()).." Oil") 	end		oilbrokermainmenupanelsellbutton:SetText("Sell "..totalOil.." Oil")	oilbrokermainmenupanelsellbutton:SetPos(200-100-50,20+200)	oilbrokermainmenupanelsellbutton:SetWide(100)	if #barrels > 0 then		oilbrokermainmenupanel.Think = function( self )			local line = oilbrokermainmenupanellist:GetSelectedLine()			if line == nil then				line = 1			end			oilbrokermainmenupanelslider:SetMax(barrels[line].Oil)				end		function oilbrokermainmenupanelsellbutton:DoClick()			self:SetDisabled(true)			oilbrokermainmenupanel:Close()			self:SetText("Sold!")			local line = 1			if oilbrokermainmenupanellist:GetSelectedLine() != nil then				line = oilbrokermainmenupanellist:GetSelectedLine()			end			RunConsoleCommand("navalwarfare_sellOil", math.Round(oilbrokermainmenupanelslider:GetValue()), barrels[line]:EntIndex(),validation)		end	endendusermessage.Hook("oilbrokermainmenu", oilbrokermainmenu)local usaguns = { 	["357 Handgun"] =    			{250,"weapon_357"},	["AR2 Machinegun"] =         	{200,"weapon_ar2"},	["Frag Grenade"] =     			{50,"weapon_frag"},	["9mm Handgun"] = 				{100,"weapon_pistol"},	["SMG Machinegun"] =         	{150,"weapon_smg1"},	["Shotgun"] =         			{150,"weapon_shotgun"},}local ussrguns = { 	["357 Handgun"] =    			{250,"weapon_357"},	["AR2 Machinegun"] =         	{200,"weapon_ar2"},	["Frag Grenade"] =     			{50,"weapon_frag"},	["9mm Handgun"] = 				{100,"weapon_pistol"},	["SMG Machinegun"] =         	{150,"weapon_smg1"},	["Shotgun"] =         			{150,"weapon_shotgun"},}local function gunshopmainmenu( data )	--oilbrokermainmenuisopen = !oilbrokermainmenuisopen	local PosX = ScrW()/2	local PosY = ScrH()/2	local validation = data:ReadString()	local gunshopmainmenupanel = vgui.Create("DFrame")	local totalOil = 0	gunshopmainmenupanel:SetTitle("GUN SHOP")	gunshopmainmenupanel:SetPos(PosX-100, PosY-100)	gunshopmainmenupanel:SetSize(300,260)	gunshopmainmenupanel:SetVisible(true)	gunshopmainmenupanel:MakePopup()	gunshopmainmenupanel:PostMessage("SetTitle", "text", "GUN SHOP")		local gunshopmainmenupanelsellbutton = vgui.Create("DButton", gunshopmainmenupanel)		local gunshopmainmenupanellist = vgui.Create("DListView")	gunshopmainmenupanellist:SetParent(gunshopmainmenupanel)	gunshopmainmenupanellist:SetPos(0, 21)	gunshopmainmenupanellist:SetSize(300, 150)	gunshopmainmenupanellist:SetMultiSelect(false)	gunshopmainmenupanellist:AddColumn("Gun")	gunshopmainmenupanellist:AddColumn("Price")	local lines = {}	local curLine = 1	local team = LocalPlayer():Team()	if team==6 then		team = LocalPlayer():GetNWInt("holdteam")	end	if team==2 then		for k,v in pairs(usaguns) do			lines[curLine] = k			curLine = curLine + 1			gunshopmainmenupanellist:AddLine(k, v[1])		end	elseif team==1 then		for k,v in pairs(ussrguns) do			lines[curLine] = k			curLine = curLine + 1			gunshopmainmenupanellist:AddLine(k, v[1])		end	end	gunshopmainmenupanelsellbutton:SetText("Purchase")	gunshopmainmenupanelsellbutton:SetPos(200-100-50,20+200)	gunshopmainmenupanelsellbutton:SetWide(100)	function gunshopmainmenupanelsellbutton:DoClick()		self:SetDisabled(true)		gunshopmainmenupanel:Close()		self:SetText("Sold!")		local line = 1		if gunshopmainmenupanellist:GetSelectedLine() != nil then			line = gunshopmainmenupanellist:GetSelectedLine()		end		local team = LocalPlayer():Team()		if team==2 then			RunConsoleCommand("navalwarfare_buygun",usaguns[lines[line]][2],validation)		elseif team==1 then			RunConsoleCommand("navalwarfare_buygun",ussrguns[lines[line]][2],validation)		end	endendusermessage.Hook("gunshopmainmenu", gunshopmainmenu)local ammo = { 	["AR2 Battery"]  			= {1,"AR2"},	["Pistol Round"]    		= {1,"Pistol"},	["SMG1 Round"] 				= {5,"SMG1"},	["357 Round"]    			= {2,"357"},	["Shotgun Shell"]     		= {10,"Buckshot"},	["Extra Grenade"]     		= {10,"Grenade"}}local ussrgunsammo = { 	["AR2"]			= 2,	["Pistol"] 		= 0.5,	["SMG1"] 		= 2,	["357"]			= 5,	["Buckshot"]	= 5,	["Grenade"]		= 50}local function ammoshopmainmenu( data )	--oilbrokermainmenuisopen = !oilbrokermainmenuisopen	local PosX = ScrW()/2	local PosY = ScrH()/2	local validation = data:ReadString()	local ammoshopmainmenupanel = vgui.Create("DFrame")	local totalOil = 0	ammoshopmainmenupanel:SetTitle("AMMO SHOP")	ammoshopmainmenupanel:SetPos(PosX-100, PosY-100)	ammoshopmainmenupanel:SetSize(300,300)	ammoshopmainmenupanel:SetVisible(true)	ammoshopmainmenupanel:MakePopup()	ammoshopmainmenupanel:PostMessage("SetTitle", "text", "AMMO SHOP")		local ammoshopmainmenupanelsellbutton = vgui.Create("DButton", ammoshopmainmenupanel)	--local ammoshopmainmenupanelbuybutton = vgui.Create("DButton", ammoshopmainmenupanel)		local ammoshopmainmenupanellist = vgui.Create("DListView")	ammoshopmainmenupanellist:SetParent(ammoshopmainmenupanel)	ammoshopmainmenupanellist:SetPos(0, 21)	ammoshopmainmenupanellist:SetSize(300, 150+25)	ammoshopmainmenupanellist:SetMultiSelect(false)	ammoshopmainmenupanellist:AddColumn("Ammo")	ammoshopmainmenupanellist:AddColumn("Price")	local lines = {}	local curLine = 1	for k,v in pairs(ammo) do		lines[curLine] = k		curLine = curLine + 1		ammoshopmainmenupanellist:AddLine(k, v[1])	end		local ammoshopmainmenupanelslider = vgui.Create( "Slider", ammoshopmainmenupanel)	ammoshopmainmenupanelslider:SetPos(80,190)	ammoshopmainmenupanelslider:SetSize( 150, 50 )	ammoshopmainmenupanelslider:SetValue(1)	ammoshopmainmenupanelslider:SetText("Amount")	ammoshopmainmenupanelslider:SetMin(0)	ammoshopmainmenupanelslider:SetMax(100)	ammoshopmainmenupanelslider:SetDecimals(0)	function ammoshopmainmenupanelslider:OnValueChanged( panel, value) 		local line = 1		if ammoshopmainmenupanellist:GetSelectedLine() != nil then			line = ammoshopmainmenupanellist:GetSelectedLine()		end		Cost = math.Round(ammoshopmainmenupanelslider:GetValue()*(ammo[lines[line]][1]))		ammoshopmainmenupanelsellbutton:SetText("Buy "..math.Round(ammoshopmainmenupanelslider:GetValue()).." ammo for "..Cost) 		--ammoshopmainmenupanelbuybutton:SetText("Buy "..math.Round(ammoshopmainmenupanelslider:GetValue()).." ammo for equipted.") 	end		ammoshopmainmenupanelsellbutton:SetText("Purchase")	ammoshopmainmenupanelsellbutton:SetPos(200-100-50,20+200+25)	ammoshopmainmenupanelsellbutton:SetWide(200)	function ammoshopmainmenupanelsellbutton:DoClick()		self:SetText("Sold!")		local line = ammoshopmainmenupanellist:GetSelectedLine()		if ammoshopmainmenupanellist:GetSelectedLine() != nil then			local Sliderval = ammoshopmainmenupanelslider:GetValue()			RunConsoleCommand("navalwarfare_buyammo",(ammo[lines[line]][2]), Sliderval, validation)			ammoshopmainmenupanel:Close()		else			ammoshopmainmenupanelsellbutton:SetText("Please select an ammo type!")		end	end		-- ammoshopmainmenupanelbuybutton:SetText("Purchase Current")	-- ammoshopmainmenupanelbuybutton:SetPos(200-100-50,20+200+25+25)	-- ammoshopmainmenupanelbuybutton:SetWide(200)	-- function ammoshopmainmenupanelbuybutton:DoClick()		-- self:SetText("Sold!")		-- local Sliderval = ammoshopmainmenupanelslider:GetValue()		-- RunConsoleCommand("navalwarfare_buycurrentammo", Sliderval, validation)		-- ammoshopmainmenupanel:Close()	-- endendusermessage.Hook("ammoshopmainmenu", ammoshopmainmenu)local function getUpgrades( data )	local ent = data:ReadEntity()	local Upgrades = {}	local loops = 1	while loops <= ent:GetNWInt("numUpgrades") do 		Upgrades[loops] = {}		Upgrades[loops][1] = ent:GetNWString(loops.."name")		Upgrades[loops][2] = ent:GetNWString(loops.."desc")		Upgrades[loops][3] = ent:GetNWString(loops.."type")		Upgrades[loops][4] = data:ReadFloat()		Upgrades[loops][5] = data:ReadBool()		loops = loops + 1	end	return Upgradesendlocal function buildUpgradesList(panel,ups)	for k,v in pairs(ups) do		local price = tostring(v[4])		if not v[5] then			price = "Max Level"		end		panel:AddLine(v[1], price, LocalPlayer():GetNWString(v[3]))		panel:SortByColumn( 1, false )	endendfunction upgradeshopmainmenu( um )	--oilbrokermainmenuisopen = !oilbrokermainmenuisopen	local PosX = ScrW()/2	local PosY = ScrH()/2	local ups = getUpgrades(um)	local validation = um:ReadString()	local upgradeshopmainmenupanel = vgui.Create("DFrame")	upgradeshopmainmenupanel:SetTitle("Upgrade Shop")	upgradeshopmainmenupanel:SetPos(PosX-100, PosY-100)	upgradeshopmainmenupanel:SetSize(300,260)	upgradeshopmainmenupanel:SetVisible(true)	upgradeshopmainmenupanel:MakePopup()	upgradeshopmainmenupanel:PostMessage("SetTitle", "text", "Upgrade Shop")		local upgradeshopmainmenupanelsellbutton = vgui.Create("DButton", upgradeshopmainmenupanel)		local upgradeshopmainmenupanellist = vgui.Create("DListView")	upgradeshopmainmenupanellist:SetParent(upgradeshopmainmenupanel)	upgradeshopmainmenupanellist:SetPos(0, 21)	upgradeshopmainmenupanellist:SetSize(300, 150)	upgradeshopmainmenupanellist:SetMultiSelect(false)	upgradeshopmainmenupanellist:AddColumn("Upgrade")	upgradeshopmainmenupanellist:AddColumn("Price")	upgradeshopmainmenupanellist:AddColumn("Current")	buildUpgradesList(upgradeshopmainmenupanellist,ups)	local upgradeDesc = vgui.Create("DLabel", upgradeshopmainmenupanel)	--upgradeDesc:SetTextColor(255,255,255,255)	upgradeDesc:SetPos(10,140)	upgradeDesc:SetColor(Color(255,255,255,255))	upgradeDesc:SetText("Select an upgrade to get a description")	upgradeDesc:SetWrap(true)	upgradeDesc:SetSize(290,100)	local lastLine = 0	upgradeshopmainmenupanel.Paint = function (self, w, h)		derma.SkinHook( "Paint", "Frame", self, w, h )		local line = upgradeshopmainmenupanellist:GetSelectedLine()		local text = ""		if line != nil and line != lastLine then			text = ups[line][2]			lastLine = line			upgradeDesc:SetText(text)		end						--upgradeDesc:SizeToContents()	end	upgradeshopmainmenupanelsellbutton:SetText("Purchase")	upgradeshopmainmenupanelsellbutton:SetPos(200-100-50,20+200)	upgradeshopmainmenupanelsellbutton:SetWide(100)	function upgradeshopmainmenupanelsellbutton:DoClick()		if upgradeshopmainmenupanellist:GetSelectedLine() != nil then			line = upgradeshopmainmenupanellist:GetSelectedLine()			if ups[line][5] then				if ups[line][4] <= LocalPlayer():GetNWInt("credits") then					self:SetDisabled(true)					upgradeshopmainmenupanel:Close()					--print("navalwarfare_buyupgrade "..line.." "..validation)					RunConsoleCommand("navalwarfare_buyupgrade",line,validation)					--upgradeshopmainmenupanellist:Clear()					--buildUpgradesList(upgradeshopmainmenupanellist,ups)				else				upgradeDesc:SetText("You don't have enough money to buy this!")				end			else				upgradeDesc:SetText("You have reached the max level for this!")			end		end	endendusermessage.Hook("upgradeshopmainmenu", upgradeshopmainmenu)